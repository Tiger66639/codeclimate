{"name":"Codeclimate","tagline":"Code Climate CLI","body":"# Code Climate CLI<br>\r\n\r\n[![Build Status](https://travis-ci.org/Tiger66639/codeclimate.svg)](https://travis-ci.org/Tiger66639/codeclimate)\r\n## Overview\r\n\r\n`codeclimate` is a command line interface for the Code Climate analysis\r\nplatform. It allows you to run Code Climate engines on your local machine inside\r\nof Docker containers.\r\n\r\n## Prerequisites\r\n\r\nThe Code Climate CLI is distributed and run as a\r\n[Docker](https://www.docker.com) image. The engines that perform the actual\r\nanalyses are also Docker images. To support this, you must have Docker installed\r\nand running locally. We also require that the Docker daemon supports connections\r\non the default Unix socket `/var/run/docker.sock`.\r\n\r\nOn OS X, we recommend using [boot2docker](http://boot2docker.io/).\r\n\r\n## Installation\r\n\r\n```console\r\ndocker pull codeclimate/codeclimate\r\n```\r\n\r\n## Usage\r\n\r\n```console\r\ndocker run \\\r\n  --interactive --tty --rm \\\r\n  --env CODE_PATH=\"$PWD\" \\\r\n  --volume \"$PWD\":/code \\\r\n  --volume /var/run/docker.sock:/var/run/docker.sock \\\r\n  --volume /tmp/cc:/tmp/cc \\\r\n  codeclimate/codeclimate help\r\n```\r\n\r\n## Packages\r\n\r\nThe above is very transparent. It's clear what's happening, and any changes\r\nrequired to work with your specific Docker setup can be discovered easily. That\r\nsaid, it can be unwieldy to invoke such a command on a regular basis.\r\n\r\nFor this reason, we also provide packages that include a small wrapper script\r\nfor the above invocation:\r\n\r\n### OS X\r\n\r\n```console\r\nbrew tap codeclimate/formulae\r\nbrew install codeclimate\r\n```\r\n\r\n### Anywhere\r\n\r\n```console\r\ncurl -L https://github.com/codeclimate/codeclimate/archive/master.tar.gz | tar xvz\r\ncd codeclimate-* && sudo make install\r\n```\r\n\r\n## Commands\r\n\r\nA list of available commands is accessible by running `codeclimate` or\r\n`codeclimate help`.\r\n\r\n```console\r\n$ codeclimate help\r\n\r\nAvailable commands:\r\n    analyze [-f format]\r\n    console\r\n    engines:disable engine_name\r\n    engines:enable engine_name\r\n    engines:install\r\n    engines:list\r\n    engines:remove\r\n    help\r\n    init\r\n    validate-config\r\n    version\r\n```\r\n\r\nThe following is a brief explanation of each available command.\r\n\r\n* `analyze`: Analyze all relevant files in the current working directory. All engines that are enabled in your `.codeclimate.yml` file will run, one after another. The `-f` (or `format`) argument allows you to set the output format of the analysis (using `json` or `text`).\r\n* `console`: start an interactive session providing access to the classes within the CLI. Useful for engine developers and maintainers.\r\n* `engines:disable engine_name`: Changes the engine's `enabled:` node to be `false` in your `.codeclimate.yml` file. This engine will not be run the next time your project is analyzed.\r\n* `engines:enable engine_name`: Installs the specified engine (`engine_name`). Also changes the engine's `enabled:` node to be `true` in your `.codeclimate.yml` file. This engine will be run the next time your project is analyzed.\r\n* `engines:install`: Compares the list of engines in your `.codeclimate.yml` file to those that are currently installed, then installs any missing engines.\r\n* `engines:list`: Lists all available engines in the [Code Climate Docker Hub](https://hub.docker.com/u/codeclimate/).\r\n* `engines:remove engine_name`: Removes an engine from your `.codeclimate.yml` file.\r\n* `help`: Displays a list of commands that can be passed to the Code Climate CLI.\r\n* `init`: Generates a new `.codeclimate.yml` file in the current working directory.\r\n* `validate-config`: Validates the `.codeclimate.yml` file in the current working directory.\r\n* `version`: Displays the current version of the Code Climate CLI.\r\n\r\n## Copyright\r\n\r\nSee [LICENSE](LICENSE)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}